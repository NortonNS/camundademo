plugins {
	id 'org.springframework.boot' version '2.4.2'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'war'
	id 'org.sonarqube' version "2.6"
	id 'name.remal.sonarlint' version '1.2.2'
	id 'jacoco'
}

group = 'com.camunda'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

war {
	enabled = true
	archiveFileName = 'camundademo.war'
}

repositories {
	mavenCentral()
}

ext {
	restAssuredVersion = '4.2.0'
}

sonarlint {
	excludes {
		message 'java:S112'
		message 'java:S2259'
		message 'java:S2699' // Test should include assertions
		message 'java:S3577' // Test classes should comply with a naming convention
	}
}

check.dependsOn jacocoTestCoverageVerification

jacocoTestCoverageVerification {
	violationRules {
		rule {
			limit {
				counter = 'LINE'
				value = 'COVEREDRATIO'
				minimum = 0.01
			}
		}
	}
}

dependencies {
	implementation 'org.apache.poi:poi:3.9'
	implementation 'org.apache.poi:poi-ooxml:3.9'

	implementation 'org.projectlombok:lombok:1.18.16'

	implementation 'org.camunda.bpm:camunda-engine:7.14.0'
	implementation 'org.camunda.bpm.dmn:camunda-engine-dmn:7.14.0'

	implementation('org.camunda.bpm.extension.dmn:dmn-xlsx-converter:0.2.0'){
		exclude group: 'org.slf4j', module: 'slf4j-log4j12'
		exclude group: 'log4j', module: 'log4j'
		exclude group: 'org.slf4j', module: 'jcl-over-slf4j'
	}
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'junit:junit:4.12'

	runtimeOnly 'com.h2database:h2'

	providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation("io.rest-assured:rest-assured:$restAssuredVersion") {
		exclude group: 'javax.xml.bind', module: 'jaxb-api'
		exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
	}
	testImplementation "io.rest-assured:json-path:$restAssuredVersion"
	testImplementation "io.rest-assured:xml-path:$restAssuredVersion"
}

test {
	useJUnitPlatform()
}
